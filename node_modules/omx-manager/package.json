{
  "name": "omx-manager",
  "version": "0.0.3",
  "description": "Provide a simple and complete interface to omxplayer (Raspberry Pi player).",
  "main": "lib/main.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/vabatta/omx-manager"
  },
  "keywords": [
    "Raspberry",
    "pi",
    "Raspberry Pi",
    "rpi",
    "omxplayer",
    "omx",
    "video",
    "player"
  ],
  "author": {
    "name": "Valerio Battaglia"
  },
  "license": "MIT",
  "devDependencies": {
    "chai": "^1.9.1",
    "jsdoc": "^3.3.0-alpha9",
    "mocha": "^1.20.1"
  },
  "readme": "# Module omx-manager\n  1. [Presentation](#presentation)\n  2. [Features](#features)\n  3. [Usage](#usage)\n    1. [Basic usage](#basicusage)\n    2. [Multiple files](#multiple)\n    3. [Loop support](#loop)\n    4. [Arguments](#arguments)\n    5. [Built-in fix for omxplayer hanging](#omxhanging)\n    6. [Status](#status)\n    7. [Videos directory](#videosdirectory)\n    8. [Videos extension](#videosextension)\n    9. [Omx command](#omxcommand)\n    10. [Other methods](#othermethods)\n    11. [Events](#events)\n  4. [Todo](#todo)\n\n**Note**: Complete **documentation** can be found on [github repo pages](http://vabatta.github.io/omx-manager/).\n\n\n<a name=\"presentation\"></a>\n## Presentation\n`omx-manager` is a Nodejs module providing a simple and complete interface to *official* [omxplayer](https://github.com/popcornmix/omxplayer). <br />\nYou can install through npm with `$> npm install omx-manager`. <br />\n**Note:** You can also use a fork version, but you should adjust `omx-manager` according to your version. <br />\n**Note 2:** This README is made with *official* [omxplayer](https://github.com/popcornmix/omxplayer) in mind.\n\n\n<a name=\"features\"></a>\n## Features\n * Supports multiple files\n * Supports loop\n    * Supports `omxplayer` muliple native loop (in case you have it, see [below](#loop))\n    * Provide a fallback if `omxplayer` doesn't support loop natively\n * Supports all arguments\n * Built-in fix for `omxplayer` hanging (reported [here](https://github.com/popcornmix/omxplayer/issues/124))\n\n\n<a name=\"usage\"></a>\n## Usage\n\n<a name=\"basicusage\"></a>\n### Basic usage\n```javascript\nvar omx = require('omx-manager');\nomx.play('video.avi');\n```\n\n\n<a name=\"multiple\"></a>\n### Multiple files\n```javascript\nomx.play(['video.avi', 'anothervideo.mp4', 'video.mkv']);\n```\n    \n**WARNING:** at this time, multiple files playing is not supported by *official* `omxplayer`, so `omx-manager` will handle it.\n\n\n<a name=\"loop\"></a>\n### Loop support\n*Official* `omxplayer` supports native loop with `--loop` flag (but only for 1 video):\n```javascript\nvar omx = require('omx-manager');\nomx.play('video.avi', {'--loop': true}); \n// this will start omxplayer with '--loop'\n```\n\nIn case you pass more than 1 video with a loop flag, `omx-manager` will ignore flag:\n```javascript\nvar omx = require('omx-manager');\nomx.play(['video.avi', 'anothervideo.avi'], {'--loop': true});\n// this will start omxplayer ignoring '--loop'\n```\n\nIf you want that `omx-manager` doesn't ignore loop flag with multiple file, just enable it:\n```javascript\nvar omx = require('omx-manager');\nomx.enableMultipleNativeLoop();\nomx.play(['video.avi', 'anothervideo.avi'], {'--loop': true});\n// this will start omxplayer with flag '--loop'\n```\n\nOtherwise, if you want loop but your `omxplayer` doesn't support it natively, pass an extra argument `true`:\n```javascript\nvar omx = require('omx-manager');\nomx.play(['video.avi', 'anothervideo.avi'], {}, true);\n// this will start omxplayer and omx-manager will handle looping\n// Note: a '--loop' flag will be ignored if passed in args\n```\n    \n**WARNING**\n\nIf you `enableMultipleNativeLoop` and use loop flag while passing the argument `loop=true` in `play` method, `omx-manager` will **ignore** the **argument** `loop=true`:\n\n```javascript\nvar omx = require('omx-manager');\nomx.enableMultipleNativeLoop();\nomx.play(['video.avi', 'anothervideo.avi'], { '--loop': true }, true);\n// argument loop in play will be ignored\n// will spawn omx process with '--loop'\n```\n\nOtherwise, if you don't `enableMultipleNativeLoop` and use loop flag while passing the argument `loop=true` to `play` method, `omxmanager` will **ignore** the **flag** `--loop`:\n\n```javascript\nvar omx = require('omx-manager');\nomx.play(['video.avi', 'anothervideo.avi'], { '--loop': true }, true);\n// flag '--loop' will be ignored\n// will spawn omx process without '--loop' and 'omx-manager' will handle loop\n```\n\n#### How works loop fallback\n*Official* `omxplayer` **doesn't** supports native loop over **multiple files**, so `omx-manager` provide a fallback:\nonce a video is ended, another omx process is spawned.\n\n\n<a name=\"arguments\"></a>\n### Arguments\nAny arguments declared in the `omxplayer` repository.<br />\nTo set an argument with value use `'argument': <value>` otherwise, if argument doesn't have a value, use `'argument': true`.\n\n**Note**: If you set an argument that `omxplayer` doesn't support or declare, `omx-manager` will anyway add it to the omx process spawn. \nThis mean that will be the `omxplayer` itself to handle the argument.\n\nNote: About **loop** see [above](#loop).\n\n#### Example object\n```javascript\n{\n  '-o': 'hdmi',\n  '-p': true,\n  '--vol': 13,\n  '-p': true,\n  '--argument-that-doesnt-exists': true //this will be passed to omx process (see note above)\n}\n```\n\n#### Example play\n```javascript\nomx.play('video.mp4', {'-p': true}); // enables audio passthrough\nomx.play('video.mp4', {'-o': 'hdmi'}); // HDMI audio output\n```\n\n\n<a name=\"omxhanging\"></a>\n### Built-in fix for omxplayer hanging\n*Official* `omxplayer` could hang randomly while playing video (reported [here](https://github.com/popcornmix/omxplayer/issues/124)), so `omx-manager` have a built-in fix for this.\n\nTo enable it, just use:\n```javascript\nomx.enableHangingHandler();\n```\n\nThis is a timeout sending a `pkill <omxcommand>`.\n\n\n<a name=\"status\"></a>\n### Status\n```javascript\nvar status = omx.getStatus();\n```\n\nReturn an object with current status.\n\nIf process is not running:\n```javascript\n{ loaded: false }\n```\n\nIf process is running:\n```javascript\n{\n  loaded: true,\n  videos: <Array>,    // videos array passed to play(videos, args)\n  current: <String>, // current video playing\n  args: <Object>,  // args object passed to play(videos, args)\n  playing: <Boolean>  // true if not paused, false if paused\n}\n```\n\n\n<a name=\"videosdirectory\"></a>\n### Videos directory\n```javascript\nomx.setVideosDirectory('my/base/path');\n```\n\nSet where to look for videos. Useful when all videos are in the same directory.\n\nInstead of this:\n```javascript\nomx.play(['/home/pi/videos/foo.mp4', '/home/pi/videos/bar.mp4', '/home/pi/videos/baz.mp4']);\n```\n\nIt's possible to use this shortcut:\n```javascript\nomx.setVideosDirectory('/home/pi/videos/');\nomx.play(['foo.mp4', 'bar.mp4', 'baz.mp4']);\n```\n\n\n<a name=\"videosextension\"></a>\n### Videos extension\n```javascript\nomx.setVideosExtension('.extension');\n```\n\nSet an extension for videos. Useful when all videos share the same format.\n\n**Note:** You must set a full extension including initial dot.\n\nInstead of this:\n```javascript\nomx.play(['foo.mp4', 'bar.mp4', 'baz.mp4']);\n```\n\nIt's possible to use this shortcut:\n```javascript\nomx.setVideosExtension('.mp4');\nomx.play(['foo', 'bar', 'baz']);\n```\n\n\n<a name=\"omxcommand\"></a>\n### Omx command\n```javascript\nomx.setOmxCommand('/path/to/my/command');\n```\n\nSet the default command to spawn. \n\nUseful when `omxplayer` isn't in your path or you want to specify a different name for the spawn.\n```javascript\nomx.setOmxCommand('/usr/local/bin/mxplayer');\nomx.play('video.avi'); // the process is spawned calling '/usr/local/bin/mxplayer'\n```\n\n\n<a name=\"othermethods\"></a>\n### Other methods\n```javascript\nomx.play();\nomx.pause();\nomx.stop();\nomx.increaseSpeed();\nomx.decreaseSpeed();\nomx.nextAudioStream();\nomx.previousAudioStream();\nomx.nextChapter();\nomx.previousChapter();\nomx.nextSubtitleStream();\nomx.previousSubtitleStream();\nomx.toggleSubtitles();\nomx.increaseSubtitleDelay();\nomx.decreaseSubtitleDelay();\nomx.increaseVolume();\nomx.decreaseVolume();\nomx.seekForward();\nomx.seekBackward();\nomx.seekFastForward();\nomx.seekFastBackward();\n\nvar loaded = omx.isLoaded(); \nvar playing = omx.isPlaying();\n```\n\nRefer to [documentation](http://vabatta.github.io/omx-manager/) for complete information about api.\n\n\n<a name=\"events\"></a>\n### Events\n```javascript\n// 'omx-manager' successfully loaded and started at first time\n// (when called 'play()' for the first time, but you still have a fire of 'play' event for first video)\nomx.on('load', function(videos, arguments) {});\n    \n// successfully started a video or resumed from pause\nomx.on('play', function(video) {});  \n    \n// successfully paused a video\nomx.on('pause', function() {}); \n    \n// successfully stopped a video (omxplayer process ends)\nomx.on('stop', function() {}); \n    \n// videos to play are ended (never called if you are in looping condition)\nomx.on('end', function() {}); \n```\n\nRefer to [documentation](http://vabatta.github.io/omx-manager/) for complete information about events.\n\n\n<a name=\"todo\"></a>\n## TODO\n\nYour suggestions are welcome!\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/vabatta/omx-manager/issues"
  },
  "_id": "omx-manager@0.0.3",
  "dist": {
    "shasum": "c3c1a7d8893e498bb95f7ca56ff493d522b38020"
  },
  "_from": "omx-manager@0.0.3",
  "_resolved": "https://registry.npmjs.org/omx-manager/-/omx-manager-0.0.3.tgz"
}
